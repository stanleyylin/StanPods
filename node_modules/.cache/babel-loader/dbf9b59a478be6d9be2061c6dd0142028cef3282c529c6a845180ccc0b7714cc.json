{"ast":null,"code":"var _jsxFileName = \"/Users/dootss/appdevelopment/blast/src/pages/albums/Albums.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Album from '../../components/Release';\nimport tunnel from '../../res/tunnel.mp4';\nimport './albums.css';\nimport { graphcms, ALBUM_POSTS_ALL } from '../../graphql/Queries';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Albums = () => {\n  _s();\n  const [posts, setPosts] = useState([]);\n  useEffect(() => {\n    graphcms.request(ALBUM_POSTS_ALL).then(res => setPosts(res.posts));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"album-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: [/*#__PURE__*/_jsxDEV(\"video\", {\n        autoPlay: true,\n        loop: true,\n        muted: true,\n        className: \"album-video\",\n        children: /*#__PURE__*/_jsxDEV(\"source\", {\n          src: tunnel,\n          type: \"video/mp4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"album-video-overlay\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"album-header-title\",\n        children: \"ALBUMS\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: posts === null || posts === void 0 ? void 0 : posts.map(post => /*#__PURE__*/_jsxDEV(Album, {\n        img: post.coverImage.url,\n        name: post.title,\n        artist: post.artist,\n        date: post.datePublished\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n_s(Albums, \"bG8V4duoIfO0BEPgauWMVT5Qvyw=\");\n_c = Albums;\nexport default Albums;\nvar _c;\n$RefreshReg$(_c, \"Albums\");","map":{"version":3,"names":["React","useState","useEffect","Album","tunnel","graphcms","ALBUM_POSTS_ALL","Link","jsxDEV","_jsxDEV","Albums","_s","posts","setPosts","request","then","res","className","children","autoPlay","loop","muted","src","type","fileName","_jsxFileName","lineNumber","columnNumber","map","post","img","coverImage","url","name","title","artist","date","datePublished","_c","$RefreshReg$"],"sources":["/Users/dootss/appdevelopment/blast/src/pages/albums/Albums.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport Album from '../../components/Release';\nimport tunnel from '../../res/tunnel.mp4';\nimport './albums.css';\nimport { graphcms, ALBUM_POSTS_ALL } from '../../graphql/Queries';\nimport { Link } from 'react-router-dom';\n\nconst Albums = () => {\n  const [posts, setPosts] = useState([]);\n\n  useEffect(() => {\n    graphcms.request(ALBUM_POSTS_ALL)\n    .then(res => setPosts(res.posts))\n  }, []);\n\n  return (\n    <main className='album-container'>\n      <header>\n        <video autoPlay loop muted className='album-video'>\n          <source src={tunnel} type='video/mp4' />\n        </video>\n        <div className='album-video-overlay'></div> \n        <h1 className='album-header-title'>ALBUMS</h1>    \n      </header>\n\n      <div>\n        {posts?.map(post => (\n          <Album \n            img={post.coverImage.url}\n            name={post.title}\n            artist={post.artist}\n            date={post.datePublished}\n          />\n        ))}\n      </div>\n    </main>\n  )\n}\n\nexport default Albums\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,0BAA0B;AAC5C,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAO,cAAc;AACrB,SAASC,QAAQ,EAAEC,eAAe,QAAQ,uBAAuB;AACjE,SAASC,IAAI,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAEtCC,SAAS,CAAC,MAAM;IACdG,QAAQ,CAACS,OAAO,CAACR,eAAe,CAAC,CAChCS,IAAI,CAACC,GAAG,IAAIH,QAAQ,CAACG,GAAG,CAACJ,KAAK,CAAC,CAAC;EACnC,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEH,OAAA;IAAMQ,SAAS,EAAC,iBAAiB;IAAAC,QAAA,gBAC/BT,OAAA;MAAAS,QAAA,gBACET,OAAA;QAAOU,QAAQ;QAACC,IAAI;QAACC,KAAK;QAACJ,SAAS,EAAC,aAAa;QAAAC,QAAA,eAChDT,OAAA;UAAQa,GAAG,EAAElB,MAAO;UAACmB,IAAI,EAAC;QAAW;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnC,CAAC,eACRlB,OAAA;QAAKQ,SAAS,EAAC;MAAqB;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eAC3ClB,OAAA;QAAIQ,SAAS,EAAC,oBAAoB;QAAAC,QAAA,EAAC;MAAM;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxC,CAAC,eAETlB,OAAA;MAAAS,QAAA,EACGN,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEgB,GAAG,CAACC,IAAI,iBACdpB,OAAA,CAACN,KAAK;QACJ2B,GAAG,EAAED,IAAI,CAACE,UAAU,CAACC,GAAI;QACzBC,IAAI,EAAEJ,IAAI,CAACK,KAAM;QACjBC,MAAM,EAAEN,IAAI,CAACM,MAAO;QACpBC,IAAI,EAAEP,IAAI,CAACQ;MAAc;QAAAb,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1B,CACF;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEX,CAAC;AAAAhB,EAAA,CA9BKD,MAAM;AAAA4B,EAAA,GAAN5B,MAAM;AAgCZ,eAAeA,MAAM;AAAA,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}