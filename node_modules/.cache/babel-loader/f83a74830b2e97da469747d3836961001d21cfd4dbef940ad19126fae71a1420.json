{"ast":null,"code":"var _jsxFileName = \"/Users/dootss/appdevelopment/blast/src/pages/albums/Category.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Album from '../../components/Release';\nimport tunnel from '../../res/tunnel.mp4';\nimport './category.css';\nimport { graphcms, CATEGORY_POSTS_ALL, options } from '../../graphql/Queries';\nimport { Link, useParams, useLocation } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Albums = () => {\n  _s();\n  const {\n    slug\n  } = useParams();\n  const [posts, setPosts] = useState([]);\n  const location = useLocation();\n  const title = slug.toUpperCase;\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [location]);\n  useEffect(() => {\n    graphcms.request(CATEGORY_POSTS_ALL, {\n      slug\n    }).then(res => setPosts(res.posts));\n  }, [slug]);\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"album-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: [/*#__PURE__*/_jsxDEV(\"video\", {\n        autoPlay: true,\n        loop: true,\n        muted: true,\n        className: \"album-video\",\n        children: /*#__PURE__*/_jsxDEV(\"source\", {\n          src: tunnel,\n          type: \"video/mp4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"album-video-overlay\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"album-header-title\",\n        children: [title.slice(0, -1), \" REVIEWS\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"albums-grid\",\n      children: posts === null || posts === void 0 ? void 0 : posts.map(post => /*#__PURE__*/_jsxDEV(Link, {\n        to: `/${slug}/${post.slug}`,\n        children: /*#__PURE__*/_jsxDEV(Album, {\n          img: post.coverPhoto.url,\n          name: post.title,\n          artist: post.artist,\n          date: new Date(post.datePublished).toLocaleDateString('en-US', options)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this)\n      }, post.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_s(Albums, \"H4tOiY767ncD7cDIRKRA0WhEQXM=\", false, function () {\n  return [useParams, useLocation];\n});\n_c = Albums;\nexport default Albums;\nvar _c;\n$RefreshReg$(_c, \"Albums\");","map":{"version":3,"names":["React","useState","useEffect","Album","tunnel","graphcms","CATEGORY_POSTS_ALL","options","Link","useParams","useLocation","jsxDEV","_jsxDEV","Albums","_s","slug","posts","setPosts","location","title","toUpperCase","window","scrollTo","request","then","res","className","children","autoPlay","loop","muted","src","type","fileName","_jsxFileName","lineNumber","columnNumber","slice","map","post","to","img","coverPhoto","url","name","artist","date","Date","datePublished","toLocaleDateString","id","_c","$RefreshReg$"],"sources":["/Users/dootss/appdevelopment/blast/src/pages/albums/Category.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport Album from '../../components/Release';\nimport tunnel from '../../res/tunnel.mp4';\nimport './category.css';\nimport { graphcms, CATEGORY_POSTS_ALL, options } from '../../graphql/Queries';\nimport { Link, useParams, useLocation } from 'react-router-dom';\n\nconst Albums = () => {\n  const { slug } = useParams();\n  const [posts, setPosts] = useState([]);\n  const location = useLocation();\n  const title = slug.toUpperCase;\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [location]);\n\n  useEffect(() => {\n    graphcms.request(CATEGORY_POSTS_ALL, { slug })\n    .then(res => setPosts(res.posts))\n  }, [slug]);\n\n  return (\n    <main className='album-container'>\n      <header>\n        <video autoPlay loop muted className='album-video'>\n          <source src={tunnel} type='video/mp4' />\n        </video>\n        <div className='album-video-overlay'></div> \n        <h1 className='album-header-title'>\n          {title.slice(0, -1)} REVIEWS\n        </h1>    \n      </header>\n\n      <div className='albums-grid'>\n        {posts?.map(post => (\n          <Link \n            to={`/${slug}/${post.slug}`}\n           key={post.id}\n          >\n            <Album \n              img={post.coverPhoto.url}\n              name={post.title}\n              artist={post.artist}\n              date={new Date(post.datePublished).toLocaleDateString('en-US', options)}\n            />\n          </Link>\n        ))}\n      </div>\n    </main>\n  )\n}\n\nexport default Albums\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}