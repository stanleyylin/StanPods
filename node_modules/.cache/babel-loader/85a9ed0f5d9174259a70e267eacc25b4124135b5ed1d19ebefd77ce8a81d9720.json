{"ast":null,"code":"var _jsxFileName = \"/Users/dootss/appdevelopment/blast/src/pages/search/SearchPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams, Link } from 'react-router-dom';\nimport { graphcms, QUERY_SEARCH } from '../../graphql/Queries';\nimport Search from '../../components/Search';\nimport './searchpage.css';\nimport Release from '../../components/Release';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SearchPage = () => {\n  _s();\n  const {\n    slug\n  } = useParams();\n  const [posts, setPosts] = useState([]);\n  useEffect(() => {\n    if (slug) {\n      graphcms.request(QUERY_SEARCH, {\n        slug\n      }).then(res => setPosts(res.posts));\n    } else {\n      setPosts([]);\n    }\n  }, [slug]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"search-container\",\n    children: [/*#__PURE__*/_jsxDEV(Search, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), slug && /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: slug.replace(/-/g, ' ')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"albums-grid\",\n      children: posts === null || posts === void 0 ? void 0 : posts.map(post => /*#__PURE__*/_jsxDEV(Link, {\n        to: `/albums/${post.slug}`,\n        children: /*#__PURE__*/_jsxDEV(Release, {\n          img: post.coverPhoto.url,\n          name: post.title,\n          artist: post.artist,\n          date: post.datePublished\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_s(SearchPage, \"BKZISs83/XtGKzkzZneZzTEJBqM=\", false, function () {\n  return [useParams];\n});\n_c = SearchPage;\nexport default SearchPage;\nvar _c;\n$RefreshReg$(_c, \"SearchPage\");","map":{"version":3,"names":["React","useState","useEffect","useParams","Link","graphcms","QUERY_SEARCH","Search","Release","jsxDEV","_jsxDEV","SearchPage","_s","slug","posts","setPosts","request","then","res","className","children","fileName","_jsxFileName","lineNumber","columnNumber","replace","map","post","to","img","coverPhoto","url","name","title","artist","date","datePublished","_c","$RefreshReg$"],"sources":["/Users/dootss/appdevelopment/blast/src/pages/search/SearchPage.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { useParams, Link } from 'react-router-dom';\nimport { graphcms, QUERY_SEARCH } from '../../graphql/Queries';\nimport Search from '../../components/Search';\nimport './searchpage.css';\nimport Release from '../../components/Release';\n\nconst SearchPage = () => {\n  const { slug } = useParams();\n  const [posts, setPosts] = useState([]);\n\n  useEffect(() => {\n    if (slug) {\n      graphcms.request(QUERY_SEARCH, { slug })\n        .then(res => setPosts(res.posts));\n    }\n    else {\n      setPosts([]);\n    }\n  }, [slug]);\n\n  return (\n    <div className='search-container'>\n      <Search/>\n\n      {slug && \n      <h2>{slug.replace(/-/g, ' ')}</h2>\n      }\n      <div className='albums-grid'>\n        {posts?.map(post => (\n          <Link to={`/albums/${post.slug}`}>\n            <Release \n              img={post.coverPhoto.url}\n              name={post.title}\n              artist={post.artist}\n              date={post.datePublished}\n            />\n          </Link>\n        ))}\n      </div>\n\n    </div>\n  )\n}\n\nexport default SearchPage\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,SAAS,EAAEC,IAAI,QAAQ,kBAAkB;AAClD,SAASC,QAAQ,EAAEC,YAAY,QAAQ,uBAAuB;AAC9D,OAAOC,MAAM,MAAM,yBAAyB;AAC5C,OAAO,kBAAkB;AACzB,OAAOC,OAAO,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM;IAAEC;EAAK,CAAC,GAAGV,SAAS,CAAC,CAAC;EAC5B,MAAM,CAACW,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAEtCC,SAAS,CAAC,MAAM;IACd,IAAIW,IAAI,EAAE;MACRR,QAAQ,CAACW,OAAO,CAACV,YAAY,EAAE;QAAEO;MAAK,CAAC,CAAC,CACrCI,IAAI,CAACC,GAAG,IAAIH,QAAQ,CAACG,GAAG,CAACJ,KAAK,CAAC,CAAC;IACrC,CAAC,MACI;MACHC,QAAQ,CAAC,EAAE,CAAC;IACd;EACF,CAAC,EAAE,CAACF,IAAI,CAAC,CAAC;EAEV,oBACEH,OAAA;IAAKS,SAAS,EAAC,kBAAkB;IAAAC,QAAA,gBAC/BV,OAAA,CAACH,MAAM;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,EAERX,IAAI,iBACLH,OAAA;MAAAU,QAAA,EAAKP,IAAI,CAACY,OAAO,CAAC,IAAI,EAAE,GAAG;IAAC;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAElCd,OAAA;MAAKS,SAAS,EAAC,aAAa;MAAAC,QAAA,EACzBN,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEY,GAAG,CAACC,IAAI,iBACdjB,OAAA,CAACN,IAAI;QAACwB,EAAE,EAAG,WAAUD,IAAI,CAACd,IAAK,EAAE;QAAAO,QAAA,eAC/BV,OAAA,CAACF,OAAO;UACNqB,GAAG,EAAEF,IAAI,CAACG,UAAU,CAACC,GAAI;UACzBC,IAAI,EAAEL,IAAI,CAACM,KAAM;UACjBC,MAAM,EAAEP,IAAI,CAACO,MAAO;UACpBC,IAAI,EAAER,IAAI,CAACS;QAAc;UAAAf,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC1B;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEH,CAAC;AAEV,CAAC;AAAAZ,EAAA,CApCKD,UAAU;EAAA,QACGR,SAAS;AAAA;AAAAkC,EAAA,GADtB1B,UAAU;AAsChB,eAAeA,UAAU;AAAA,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}