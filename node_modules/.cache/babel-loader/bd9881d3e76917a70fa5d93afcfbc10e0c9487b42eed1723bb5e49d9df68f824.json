{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { graphcms } from '../graphql/Queries';\nimport { useMyContext } from '../context/store';\nconst useQueryPosts = _ref => {\n  _s();\n  let {\n    query,\n    limit = 6\n  } = _ref;\n  const {\n    slug\n  } = useParams();\n  const [posts, setPosts] = useState([]);\n  const [error, setError] = useState(null);\n  const {\n    setLoading\n  } = useMyContext();\n  useEffect(() => {\n    setLoading(true);\n    graphcms.request(query, {\n      slug\n    }).then(res => {\n      var _res$countConnection, _res$countConnection$;\n      const count = (res === null || res === void 0 ? void 0 : (_res$countConnection = res.countConnection) === null || _res$countConnection === void 0 ? void 0 : (_res$countConnection$ = _res$countConnection.aggregate) === null || _res$countConnection$ === void 0 ? void 0 : _res$countConnection$.count) || 0;\n      setPosts(res.posts);\n      setError(null);\n    }).catch(error => {\n      setPosts([]);\n      setError(error.message);\n    }).finally(() => setLoading(false));\n  }, [setLoading, query, slug, limit]);\n  return {\n    posts,\n    error\n  };\n};\n_s(useQueryPosts, \"0LRweHlGB3bc4hVnzeiSLyc1ja0=\", false, function () {\n  return [useParams, useMyContext];\n});\nexport default useQueryPosts;","map":{"version":3,"names":["useState","useEffect","useParams","graphcms","useMyContext","useQueryPosts","_ref","_s","query","limit","slug","posts","setPosts","error","setError","setLoading","request","then","res","_res$countConnection","_res$countConnection$","count","countConnection","aggregate","catch","message","finally"],"sources":["/Users/dootss/appdevelopment/blast/src/hooks/useQueryPosts.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { graphcms } from '../graphql/Queries';\nimport { useMyContext } from '../context/store';\n\nconst useQueryPosts = ({query, limit = 6 }) => {\n  const { slug } = useParams();\n  const [posts, setPosts] = useState([]);\n  const [error, setError] = useState(null);\n  \n  const { setLoading } = useMyContext();\n\n  useEffect(() => {\n    setLoading(true);\n\n    graphcms.request(query, { slug })\n    .then(res => {\n      const count = res?.countConnection?.aggregate?.count || 0;\n      setPosts(res.posts)\n      setError(null)\n    })\n    .catch(error => {\n      setPosts([]);\n      setError(error.message);\n    })\n    .finally(() => setLoading(false))\n  }, [setLoading, query, slug, limit])\n\n  return { posts, error }\n}\n\nexport default useQueryPosts\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,SAASC,QAAQ,QAAQ,oBAAoB;AAC7C,SAASC,YAAY,QAAQ,kBAAkB;AAE/C,MAAMC,aAAa,GAAGC,IAAA,IAAyB;EAAAC,EAAA;EAAA,IAAxB;IAACC,KAAK;IAAEC,KAAK,GAAG;EAAE,CAAC,GAAAH,IAAA;EACxC,MAAM;IAAEI;EAAK,CAAC,GAAGR,SAAS,CAAC,CAAC;EAC5B,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACa,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAM;IAAEe;EAAW,CAAC,GAAGX,YAAY,CAAC,CAAC;EAErCH,SAAS,CAAC,MAAM;IACdc,UAAU,CAAC,IAAI,CAAC;IAEhBZ,QAAQ,CAACa,OAAO,CAACR,KAAK,EAAE;MAAEE;IAAK,CAAC,CAAC,CAChCO,IAAI,CAACC,GAAG,IAAI;MAAA,IAAAC,oBAAA,EAAAC,qBAAA;MACX,MAAMC,KAAK,GAAG,CAAAH,GAAG,aAAHA,GAAG,wBAAAC,oBAAA,GAAHD,GAAG,CAAEI,eAAe,cAAAH,oBAAA,wBAAAC,qBAAA,GAApBD,oBAAA,CAAsBI,SAAS,cAAAH,qBAAA,uBAA/BA,qBAAA,CAAiCC,KAAK,KAAI,CAAC;MACzDT,QAAQ,CAACM,GAAG,CAACP,KAAK,CAAC;MACnBG,QAAQ,CAAC,IAAI,CAAC;IAChB,CAAC,CAAC,CACDU,KAAK,CAACX,KAAK,IAAI;MACdD,QAAQ,CAAC,EAAE,CAAC;MACZE,QAAQ,CAACD,KAAK,CAACY,OAAO,CAAC;IACzB,CAAC,CAAC,CACDC,OAAO,CAAC,MAAMX,UAAU,CAAC,KAAK,CAAC,CAAC;EACnC,CAAC,EAAE,CAACA,UAAU,EAAEP,KAAK,EAAEE,IAAI,EAAED,KAAK,CAAC,CAAC;EAEpC,OAAO;IAAEE,KAAK;IAAEE;EAAM,CAAC;AACzB,CAAC;AAAAN,EAAA,CAxBKF,aAAa;EAAA,QACAH,SAAS,EAIHE,YAAY;AAAA;AAqBrC,eAAeC,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}