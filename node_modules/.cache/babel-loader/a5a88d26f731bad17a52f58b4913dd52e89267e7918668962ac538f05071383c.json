{"ast":null,"code":"var _jsxFileName = \"/Users/dootss/appdevelopment/blast/src/pages/reviews/Category.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport Album from '../../components/Release';\nimport tunnel from '../../res/tunnel.mp4';\nimport './category.css';\nimport { CATEGORY_POSTS_ALL, options } from '../../graphql/Queries';\nimport { Link, useParams, useLocation } from 'react-router-dom';\nimport useQueryPosts from '../../hooks/useQueryPosts';\nimport Pagination from '../../components/Pagination';\nimport { useMyContext } from '../../context/store';\nimport { useInView } from 'react-intersection-observer';\nimport NotFound from '../../components/NotFound';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Category = () => {\n  _s();\n  const {\n    posts,\n    error\n  } = useQueryPosts({\n    query: CATEGORY_POSTS_ALL\n  });\n  const {\n    slug\n  } = useParams();\n  const location = useLocation();\n  const {\n    totalPage\n  } = useMyContext();\n  const {\n    ref,\n    inView\n  } = useInView({\n    threshold: 0.1\n  });\n  useEffect(() => {\n    if (location.search === '') {\n      window.scrollTo(0, 0);\n    } else {\n      window.scrollTo(0, 600);\n    }\n  }, [location]);\n  console.log(slug);\n  if (error) return /*#__PURE__*/_jsxDEV(\"h2\", {\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 20\n  }, this);\n  if (slug !== 'albums' || slug !== 'tracks') {\n    return /*#__PURE__*/_jsxDEV(NotFound, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"album-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: [/*#__PURE__*/_jsxDEV(\"video\", {\n        autoPlay: true,\n        loop: true,\n        muted: true,\n        className: \"album-video\",\n        children: /*#__PURE__*/_jsxDEV(\"source\", {\n          src: tunnel,\n          type: \"video/mp4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"album-video-overlay\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: `album-header-title ${inView ? 'zoom-out' : ''}`,\n        ref: ref,\n        children: [slug.toUpperCase().slice(0, -1), \" REVIEWS\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"albums-grid\",\n      children: posts === null || posts === void 0 ? void 0 : posts.map(post => /*#__PURE__*/_jsxDEV(Link, {\n        to: `/${slug}/${post.slug}`,\n        children: /*#__PURE__*/_jsxDEV(Album, {\n          img: post.coverPhoto.url,\n          name: post.title,\n          artist: post.artist,\n          date: new Date(post.datePublished).toLocaleDateString('en-US', options)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this)\n      }, post.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n      totalPage: totalPage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(Category, \"TaoFQvPYphI9CdcZvlFQnay5rVY=\", false, function () {\n  return [useQueryPosts, useParams, useLocation, useMyContext, useInView];\n});\n_c = Category;\nexport default Category;\nvar _c;\n$RefreshReg$(_c, \"Category\");","map":{"version":3,"names":["React","useEffect","Album","tunnel","CATEGORY_POSTS_ALL","options","Link","useParams","useLocation","useQueryPosts","Pagination","useMyContext","useInView","NotFound","jsxDEV","_jsxDEV","Category","_s","posts","error","query","slug","location","totalPage","ref","inView","threshold","search","window","scrollTo","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","className","autoPlay","loop","muted","src","type","toUpperCase","slice","map","post","to","img","coverPhoto","url","name","title","artist","date","Date","datePublished","toLocaleDateString","id","_c","$RefreshReg$"],"sources":["/Users/dootss/appdevelopment/blast/src/pages/reviews/Category.jsx"],"sourcesContent":["import React, { useEffect } from 'react'\nimport Album from '../../components/Release';\nimport tunnel from '../../res/tunnel.mp4';\nimport './category.css';\nimport { CATEGORY_POSTS_ALL, options } from '../../graphql/Queries';\nimport { Link, useParams, useLocation } from 'react-router-dom';\nimport useQueryPosts from '../../hooks/useQueryPosts';\nimport Pagination from '../../components/Pagination';\nimport { useMyContext } from '../../context/store';\nimport { useInView } from 'react-intersection-observer';\nimport NotFound from '../../components/NotFound';\n\nconst Category = () => {\n  const { posts, error} = useQueryPosts({query: CATEGORY_POSTS_ALL});\n  const { slug } = useParams();\n  const location = useLocation();\n  const { totalPage } = useMyContext();\n  \n  const { ref, inView } = useInView({\n    threshold: 0.1, \n  });\n\n  useEffect(() => {\n    if (location.search === '') {\n      window.scrollTo(0, 0);\n    } else {\n      window.scrollTo(0, 600);\n    }\n  }, [location]);\n  console.log(slug);\n  if(error) return <h2>{error}</h2>\n  if(slug !== 'albums' || slug !== 'tracks') {\n    return <NotFound/>\n  }\n  \n  return (\n    <main className='album-container'>\n      <header>\n        <video autoPlay loop muted className='album-video'>\n          <source src={tunnel} type='video/mp4' />\n        </video>\n        <div className='album-video-overlay'></div> \n        <h1 className={`album-header-title ${inView ? 'zoom-out' : ''}`} ref={ref}>\n          {slug.toUpperCase().slice(0, -1)} REVIEWS\n        </h1>    \n      </header>\n\n      <div className='albums-grid'>\n        {posts?.map(post => (\n          <Link \n            to={`/${slug}/${post.slug}`}\n           key={post.id}\n          >\n            <Album \n              img={post.coverPhoto.url}\n              name={post.title}\n              artist={post.artist}\n              date={new Date(post.datePublished).toLocaleDateString('en-US', options)}\n            />\n          </Link>\n        ))}\n      </div>\n\n      <Pagination totalPage={totalPage}/>\n    </main>\n  )\n}\n\nexport default Category\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}